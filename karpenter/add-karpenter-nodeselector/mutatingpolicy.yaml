apiVersion: policies.kyverno.io/v1alpha1
kind: MutatingPolicy
metadata:
  name: add-karpenter-nodeselector
  annotations:
    policies.kyverno.io/title: Add Karpenter nodeSelector
    policies.kyverno.io/category: Karpenter, EKS Best Practices
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: Pod
    kyverno.io/kyverno-version: 1.7.1
    policies.kyverno.io/minversion: 1.6.0
    kyverno.io/kubernetes-version: "1.23"
    policies.kyverno.io/description: >- 
      Selecting the correct Node(s) provisioned by Karpenter is a way to specify
      the appropriate resource landing zone for a workload. This policy injects a
      nodeSelector map into the Pod based on the Namespace type where it is deployed.
spec:
  matchConstraints:
    resourceRules:
    - apiGroups: [""]
      apiVersions: ["v1"]
      resources: ["pods"]
      operations: ["CREATE", "UPDATE"]
    namespaceSelector:
      matchExpressions:
      - key: type
        operator: In
        values: ["medium", "large"]
  reinvocationPolicy: Never
  mutations:
  - patchType: ApplyConfiguration
    applyConfiguration:
      expression: >
        has(namespaceObject.metadata.labels) && has(namespaceObject.metadata.labels.type) && namespaceObject.metadata.labels.type == "medium" ?
        Object{
          spec: Object.spec{
            nodeSelector: Object.spec.nodeSelector{
              "kubernetes.io/arch": "amd64",
              "karpenter.sh/capacity-type": "spot"
            }
          }
        } :
        has(namespaceObject.metadata.labels) && has(namespaceObject.metadata.labels.type) && namespaceObject.metadata.labels.type == "large" ?
        Object{
          spec: Object.spec{
            nodeSelector: Object.spec.nodeSelector{
              "kubernetes.io/arch": "amd64",
              "karpenter.sh/capacity-type": "on-demand"
            }
          }
        } : Object{}